@model AppNt.Models.Vote

@{
    ViewData["Title"] = "Edit";
}
<head>
    <link rel="stylesheet" href="~/css/botonesPrincipales.css">
</head>

<h1>Edit</h1>

<h4>Vote</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamId" class="control-label"></label>
                <select asp-for="TeamId" class="form-control" asp-items="ViewBag.TeamId"></select>
                <span asp-validation-for="TeamId" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="valueVote" /> @Html.DisplayNameFor(model => model.valueVote)
                </label>
            </div>
            <div class="form-group">
                 <a><button type="submit" class="button-28" role="button">Edit </button></a>
            </div>
        </form>
    </div>
</div>

<div>

    
    <a asp-action="Index"><button class="button-28" role="button">Back to List</button></a>


</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
